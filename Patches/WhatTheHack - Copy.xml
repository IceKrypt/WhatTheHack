<?xml version="1.0" encoding="utf-8" ?>
<Patch>

<Operation Class ="PatchOperationAdd">
	<xpath>Defs/ThinkTreeDef[defName = "Mechanoid" or defName = "Mechanoid_Skullywag"]/thinkRoot[@Class = "ThinkNode_Priority"]/subNodes</xpath>
	<order>Prepend</order>
	<value>
		<li Class="WhatTheHack.ThinkTree.ThinkNode_ConditionalMechanoidRest">
			<subNodes>
				<li Class="WhatTheHack.Jobs.JobGiver_Mechanoid_Rest"/>
			</subNodes>
		</li>
	</value>
</Operation>

<!-- CE Stuff, not really needed 
<Operation Class="PatchOperationFindMod">
	<mods>
		<li>Combat Extended</li>
	</mods>
	<match Class ="PatchOperationAdd">
		<xpath>Defs/DutyDef[defName="WTH_SearchAndDestroy"]/thinkNode[@Class="ThinkNode_Priority"]/subNodes</xpath>
		<value>
			<li Class="CombatExtended.JobGiver_TakeAndEquip"/>
		</value>
	</match>
</Operation>
-->
<!-- might want this for your race if they dont inherit human recipies
<Operation Class ="PatchOperationAdd">
	<xpath>Defs/ThingDef[defName = "Human"]/recipes</xpath>
	<value>
		<li>WTH_ExtractBrainData</li> 
	</value>
</Operation>
 -->
 
<!--Add mechanoid specific operations, we take into account that some mods don't use BaseMechanoid, that some mods define the raceprops in both their base as in the def itself, and we take into account that mechs could, or could not already have recipes.-->
<Operation Class="PatchOperationSequence">
	<success>Always</success>
	<operations>
		<li Class="PatchOperationConditional">
			<xpath>Defs/ThingDef[@ParentName="BaseMechanoid" or @WTH_Hackable="True" or (race/fleshType = "Mechanoid" and not (@ParentName="BaseMechanoid") and not (@Name="BaseMechanoid"))]/recipes</xpath>
			<match Class="PatchOperationAdd">
				<xpath>Defs/ThingDef[@ParentName="BaseMechanoid" or @WTH_Hackable="True" or (race/fleshType = "Mechanoid" and not (@ParentName="BaseMechanoid") and not (@Name="BaseMechanoid"))]/recipes</xpath>
				<value>
					<li>WTH_HackMechanoid</li>
					<li>WTH_InduceEmergencySignal</li>
					<li>WTH_ImplantAI</li>
					<li>WTH_ShutDownMechanoid</li>
					<li>WTH_InstallRepairModule</li>
					<li>WTH_InstallRepairArm</li>
					<li>WTH_InstallSelfDestruct</li>
					<li>WTH_InstallTurretModule</li>
					<li>WTH_InstallBatteryExpansionModule</li>
					<li>WTH_InstallVanometricModule</li>
					<li>WTH_InstallBeltModule</li>	
					<li>WTH_InstallCleaningModule</li>
					<li>WTH_InstallHaulingModule</li>
					<li>WTH_InstallSpeedModule</li>
					<li>WTH_InstallArmorModule</li>
					<li>WTH_InstallGrowingModule</li>
					<li>WTH_InstallFirefightingModule</li>
					<li>WTH_InstallOverdriveModule</li>
					<li>WTH_InstallOpticSensorModule</li>
					<li>WTH_InstallCargoModule</li>
				</value>
			</match> 
			<nomatch Class="PatchOperationAdd">
				<xpath>Defs/ThingDef[@ParentName="BaseMechanoid" or (race/fleshType = "Mechanoid" and not (@ParentName="BaseMechanoid") and not (@Name="BaseMechanoid"))]</xpath>
				<value>
					<recipes>
						<li>WTH_HackMechanoid</li>
						<li>WTH_InduceEmergencySignal</li>
						<li>WTH_ImplantAI</li>
						<li>WTH_ShutDownMechanoid</li>
						<li>WTH_InstallRepairModule</li>
						<li>WTH_InstallRepairArm</li>
						<li>WTH_InstallSelfDestruct</li>
						<li>WTH_InstallTurretModule</li>
						<li>WTH_InstallBatteryExpansionModule</li>
						<li>WTH_InstallVanometricModule</li>
						<li>WTH_InstallBeltModule</li>	
						<li>WTH_InstallCleaningModule</li>
						<li>WTH_InstallHaulingModule</li>
						<li>WTH_InstallSpeedModule</li>
						<li>WTH_InstallArmorModule</li>
						<li>WTH_InstallGrowingModule</li>
						<li>WTH_InstallFirefightingModule</li>
						<li>WTH_InstallOverdriveModule</li>
						<li>WTH_InstallOpticSensorModule</li>
						<li>WTH_InstallCargoModule</li>
					</recipes>		
				</value>
			</nomatch> 
		</li> 
	</operations>
</Operation>
<!--Operation Class="PatchOperationSequence">
	<success>Always</success>
	<operations>
		<li Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[@ParentName="BaseMechanoid" or (race/fleshType = "Mechanoid" and not (@ParentName="BaseMechanoid") and not (@Name="BaseMechanoid"))]</xpath>
			<value>
				<recipes>
					<li>WTH_HackMechanoid</li>
					<li>WTH_InduceEmergencySignal</li>
					<li>WTH_ImplantAI</li>
					<li>WTH_ShutDownMechanoid</li>
					<li>WTH_InstallRepairModule</li>
					<li>WTH_InstallRepairArm</li>
					<li>WTH_InstallSelfDestruct</li>
					<li>WTH_InstallTurretModule</li>
					<li>WTH_InstallBatteryExpansionModule</li>
					<li>WTH_InstallVanometricModule</li>
					<li>WTH_InstallBeltModule</li>	
					<li>WTH_InstallCleaningModule</li>
					<li>WTH_InstallHaulingModule</li>
					<li>WTH_InstallSpeedModule</li>
					<li>WTH_InstallArmorModule</li>
					<li>WTH_InstallGrowingModule</li>
					<li>WTH_InstallFirefightingModule</li>
					<li>WTH_InstallOverdriveModule</li>
					<li>WTH_InstallOpticSensorModule</li>
					<li>WTH_InstallCargoModule</li>
				</recipes>		
			</value>
		</li> 
	</operations>
</Operation-->
<Operation Class="PatchOperationSequence">
	<success>Always</success>
	<operations>
		<li Class="PatchOperationAdd">
			<xpath>Defs/ThingDef/race[fleshType = "Mechanoid" and not(nameGenerator)]</xpath>
			<value>
				<nameGenerator>NamerAnimalUtility</nameGenerator>
			</value>
		</li> 
	</operations>
</Operation>


<Operation Class="PatchOperationSequence">
	<success>Always</success>
	<operations>
		<li Class="PatchOperationAdd">
			<xpath>Defs/ThingDef[(@ParentName="BaseMechanoid" or (race/fleshType = "Mechanoid" and not (@ParentName="BaseMechanoid") and not (@Name="BaseMechanoid"))) and not(comps)]</xpath>
			<value>
				<comps>
					<li Class="CompProperties_Refuelable">
						<fuelLabel>Loaded mechanoid parts</fuelLabel>
						<fuelGizmoLabel>Loaded mechanoid parts</fuelGizmoLabel>
						<fuelConsumptionRate>40.0</fuelConsumptionRate>
						<fuelCapacity>15.0</fuelCapacity>
						<fuelFilter>
						  <thingDefs>
							<li>WTH_MechanoidParts</li>
						  </thingDefs>
						</fuelFilter>
						<consumeFuelOnlyWhenUsed>true</consumeFuelOnlyWhenUsed>
					</li>
				</comps>
			</value>
		</li> 
	</operations>
</Operation>

	<Operation Class="PatchOperationInsert">
		<xpath>Defs/ThinkTreeDef[defName = "Mechanoid" or defName = "Mechanoid_Skullywag"]/thinkRoot[@Class = "ThinkNode_Priority"]/subNodes/li[treeDef="LordDuty"]</xpath> <!--Priority is important here, hence the insert after this specific subNode--> 
		<value>
			<!-- Make sure mechanoids don't wander about when drafted --> 
			<li Class="ThinkNode_ConditionalDrafted">
			  <subNodes>
				<li Class="ThinkNode_Tagger">
				  <tagToGive>DraftedOrder</tagToGive>
				  <subNodes>
					<li Class="JobGiver_MoveToStandable" />
					<li Class="JobGiver_Orders" />
				  </subNodes>
				</li>
			  </subNodes>
			</li>
			<!-- Work order for mechs with work modules --> 
			<li Class="WhatTheHack.ThinkTree.ThinkNode_ConditionalMechanoidWork">
				<subNodes>
					<li Class="WhatTheHack.Jobs.JobGiver_Work_Mechanoid"/>
				</subNodes>
			</li>
		</value>
	</Operation>
	
</Patch>
